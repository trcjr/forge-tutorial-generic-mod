<project name="BuildCraft" default="main">
    <property environment="env" />
    <!-- Properties -->

    <property name="build.dir"           value="build"/>
    <property name="src.dir"             value="forge-tutorial-generic-mod"/>

    <property name="download.dir"        value="${build.dir}/download"/>

    <property name="classes.dir"         value="${build.dir}/classes"/>
    <property name="jar.dir"             value="${build.dir}/dist"/>

    <property name="mcp.dir"             value="${build.dir}/mcp"/>
    <property name="forge.dir"           value="${mcp.dir}/forge"/>

    <property name="mcpsrc.dir"          value="${mcp.dir}/src"/>
    <property name="forgesrc.dir"        value="${mcp.dir}/forge_src"/>

    <property name="mcp.version"         value="723"/>
    <property name="minecraft.version"   value="1.4.5"/>
    <property name="forge.version"       value="6.4.0.390"/>
    <property name="mod.version"          value="0.0.1"/>

    <available property="forge-exists" file="${download.dir}/minecraftforge-src-${forge.version}.zip"/>
    <condition property="should-download-ant-contrib">
        <not>
            <or>
                <available file="${download.dir}/ant-contrib/ant-contrib-1.0b3.jar"/>
                <available file="${download.dir}/minecraftforge-src-${minecraft.version}-${forge.version}.zip"/>
            </or>
        </not>
    </condition>
    <condition property="out-of-date">
        <not>
            <and>
                <available file="${download.dir}/mcp${mcp.version}.zip"/>
                <available file="${download.dir}/minecraftforge-src-${forge.version}.zip"/>
                <available file="${forgesrc.dir}"/>
            </and>
        </not>
    </condition>



    <mkdir dir="${download.dir}"/>

    <!-- Targets -->

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <!-- Set build number -->
    <target name="initialize-version" depends="version-provided,version-not-provided">
        <property name="mod.version.full"     value="${mod.version}.${build.number}"/>
        <echo message="Starting build for ${mod.version.full}"/>
    </target>

    <target name="version-not-provided" unless="env.BUILD_NUMBER">
        <property name="build.number" value="unknown"/>
    </target>

    <target name="version-provided" if="env.BUILD_NUMBER">
        <property name="build.number" value="${env.BUILD_NUMBER}"/>
    </target>

    <!-- Download necessary files -->
    <target name="download-files" depends="download-mcp,download-forge"/>

    <!-- Download ant-contrib, necessary to be able to download forge (only if neither forge zip nor ant-contrib exist) -->
    <target name="download-ant-contrib" if="should-download-ant-contrib">

        <echo message="Getting: ant-contrib"/>
        <mkdir dir="${download.dir}/tmp"/>

        <get src="http://sourceforge.net/projects/ant-contrib/files/ant-contrib/1.0b3/ant-contrib-1.0b3-bin.zip/download" dest="${download.dir}/tmp/ant-contrib-1.0b3-bin.zip"/>
        <get src="http://archive.apache.org/dist/commons/codec/binaries/commons-codec-1.6-bin.zip" dest="${download.dir}/tmp/commons-codec-1.6-bin.zip"/>

        <unzip src="${download.dir}/tmp/ant-contrib-1.0b3-bin.zip" dest="${download.dir}"/>
        <unzip src="${download.dir}/tmp/commons-codec-1.6-bin.zip" dest="${download.dir}/tmp"/>

        <move todir="${download.dir}/ant-contrib/lib">
            <fileset file="${download.dir}/tmp/commons-codec-1.6/commons-codec-1.6.jar"/>
        </move>

        <!-- Delete useless files -->
        <delete dir="${download.dir}/ant-contrib/docs"/>
        <delete dir="${download.dir}/tmp"/>

    </target>

    <!-- Download mcp -->
    <target name="download-mcp" if="out-of-date">

        <get src="http://mcp.ocean-labs.de/files/mcp${mcp.version}.zip" dest="${download.dir}" usetimestamp="True"/>

    </target>

    <!-- Download forge (if it doesn't exist) -->
    <target name="download-forge" depends="download-ant-contrib" unless="forge-exists" >

        <taskdef resource="net/sf/antcontrib/antlib.xml">
            <classpath>
                <pathelement location="${download.dir}/ant-contrib/ant-contrib-1.0b3.jar"/>
                <fileset dir="${download.dir}/ant-contrib/lib">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </taskdef>

        <getMethod url="http://files.minecraftforge.net/minecraftforge-src-${forge.version}.zip"
                   responseDataFile="${download.dir}/minecraftforge-src-${forge.version}.zip">
            <header name="User-Agent" value="Ant-${ant.version}/${ant.java.version}"/>
        </getMethod>

    </target>

    <!-- Setup mcp and forge -->
    <target name="setup" depends="download-files" if="out-of-date">

        <delete dir="${mcp.dir}" failonerror="false"/>

        <!-- Unzip them -->
        <unzip dest="${mcp.dir}">
            <fileset dir="${download.dir}">
                <include name="mcp${mcp.version}.zip"/>
            </fileset>
        </unzip>

        <unzip dest="${mcp.dir}">
            <fileset dir="${download.dir}">
                <include name="minecraftforge-src-${forge.version}.zip"/>
            </fileset>
        </unzip>

        <!-- Fix executable permissions -->
        <chmod dir="${mcp.dir}" perm="ugo+rx" includes="**.sh"/>
        <chmod file="${mcp.dir}/runtime/bin/astyle-osx" perm="ugo+rx"/>

        <!-- Install forge -->
        <exec dir="${forge.dir}" executable="cmd" osfamily="windows">
            <arg line="/c install.cmd"/>
        </exec>

        <exec dir="${forge.dir}" executable="sh" osfamily="unix">
            <arg value="install.sh" />
        </exec>

        <delete dir="${forgesrc.dir}"/>
        <move file="${mcpsrc.dir}" todir="${forgesrc.dir}"/>

    </target>

    <target name="compile" depends="initialize-version,setup">

        <!-- Reset MCP to post-forge-install state -->
        <delete dir="${mcpsrc.dir}"/>
        <delete dir="${classes.dir}"/>
        <mkdir dir="${classes.dir}"/>
        <copy todir="${mcpsrc.dir}/..">
            <fileset dir="${forgesrc.dir}"/>
        </copy>

        <!-- Copy Client only source -->
        <copy todir="${mcpsrc.dir}/minecraft">
            <fileset dir="${src.dir}/minecraft">
            </fileset>
        </copy>

        <!-- Copy Common source -->
        <copy todir="${mcpsrc.dir}/common">
            <fileset dir="${src.dir}/common">
                <exclude name="**/buildcraft/devel"/>
            </fileset>
            <filterset>
                <filter token="VERSION" value="${mod.version}" />
                <filter token="BUILD_NUMBER" value="${build.number}" />
            </filterset>
        </copy>

        <!-- Recompile -->
        <exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
            <arg line="/c recompile.bat"/>
        </exec>

        <exec dir="${mcp.dir}" executable="sh" osfamily="unix">
            <arg value="recompile.sh" />
        </exec>

        <!-- Reobf -->
        <exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
            <arg line="/c reobfuscate.bat"/>
        </exec>

        <exec dir="${mcp.dir}" executable="sh" osfamily="unix">
            <arg value="reobfuscate.sh" />
        </exec>

        <!-- Copy BC classes -->
        <copy todir="${classes.dir}">
            <fileset dir="${mcp.dir}/reobf/minecraft"/>
        </copy>

        <!-- Copy resources -->
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}/resources">
                <exclude name="build.xml"/>
                <exclude name="build.number"/>
            </fileset>
        </copy>

        <!-- Copy localizations -->
<!--
        <copy todir="${classes.dir}" failonerror="false">
            <fileset dir="${lang.dir}">
                <exclude name="README.md"/>
            </fileset>
        </copy>
-->
    </target>

    <!-- Zip the compiled files -->
    <target name="package" depends="compile">

        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}-${mod.version.full}.jar" basedir="${classes.dir}"/>

    </target>

    <!-- Default target to run -->
    <target name="main" depends="package"/>

</project>
